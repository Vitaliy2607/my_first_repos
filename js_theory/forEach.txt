–ö–æ–Ω–µ—á–Ω–æ! forEach ‚Äî —ç—Ç–æ –æ–¥–∏–Ω –∏–∑ —Å–∞–º—ã—Ö –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –∏ —É–¥–æ–±–Ω—ã—Ö –º–µ—Ç–æ–¥–æ–≤ –≤ JavaScript –¥–ª—è –ø–µ—Ä–µ–±–æ—Ä–∞ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –º–∞—Å—Å–∏–≤–∞. –í–æ—Ç –≤—Å—ë, —á—Ç–æ —Ç–µ–±–µ –Ω—É–∂–Ω–æ –∑–Ω–∞—Ç—å:

üîÅ –ß—Ç–æ —Ç–∞–∫–æ–µ forEach
forEach ‚Äî —ç—Ç–æ –º–µ—Ç–æ–¥ –º–∞—Å—Å–∏–≤–æ–≤, –∫–æ—Ç–æ—Ä—ã–π –≤—ã–ø–æ–ª–Ω—è–µ—Ç –ø–µ—Ä–µ–¥–∞–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é –æ–¥–∏–Ω —Ä–∞–∑ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å—Å–∏–≤–∞.
!!! forEach –†–ê–ë–û–¢–ê–ï–¢ –° –ö–û–ü–ò–ï–ô –ú–ê–°–°–ò–í–ê

üß† –°–∏–Ω—Ç–∞–∫—Å–∏—Å
array.forEach(function(element, index, array) {
  // —Ç–≤–æ–π –∫–æ–¥
});

–ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
element	–¢–µ–∫—É—â–∏–π —ç–ª–µ–º–µ–Ω—Ç –º–∞—Å—Å–∏–≤–∞
index	–ò–Ω–¥–µ–∫—Å —Ç–µ–∫—É—â–µ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π)
array	–°–∞–º –º–∞—Å—Å–∏–≤, –ø–æ –∫–æ—Ç–æ—Ä–æ–º—É –∏–¥—ë—Ç –ø–µ—Ä–µ–±–æ—Ä

‚úÖ –ü—Ä–æ—Å—Ç–æ–π –ø—Ä–∏–º–µ—Ä
const fruits = ['apple', 'banana', 'cherry'];

fruits.forEach(function(fruit, index) {
  console.log(index + ': ' + fruit);
});
–í—ã–≤–æ–¥:
0: apple
1: banana
2: cherry

‚úÖ –°—Ç—Ä–µ–ª–æ—á–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
fruits.forEach((fruit, index) => {
  console.log(`${index}: ${fruit}`);
});
üõë –í–∞–∂–Ω—ã–µ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:
–ù–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—Ä–µ—Ä–≤–∞–Ω (–≤ –æ—Ç–ª–∏—á–∏–µ –æ—Ç for, while, for...of)

–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç undefined, –Ω–µ —Å–æ–∑–¥–∞—ë—Ç –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤ (–≤ –æ—Ç–ª–∏—á–∏–µ –æ—Ç map)

–ù–µ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å await –≤–Ω—É—Ç—Ä–∏ (–ª—É—á—à–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å for...of —Å async/await)

üì¶ –ü—Ä–∏–º–µ—Ä –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è
–£–≤–µ–ª–∏—á–∏–º –≤—Å–µ —á–∏—Å–ª–∞ –Ω–∞ 2:
const numbers = [1, 2, 3];
numbers.forEach((n, i, arr) => {
  arr[i] = n + 2;
});
console.log(numbers); // [3, 4, 5]

‚ùó –ö–æ–≥–¥–∞ –Ω–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å
–ï—Å–ª–∏ —Ç–µ–±–µ –Ω—É–∂–µ–Ω –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤ ‚Äî –∏—Å–ø–æ–ª—å–∑—É–π map.
–ï—Å–ª–∏ —Ö–æ—á–µ—à—å –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–µ—Ä–µ–±–æ—Ä ‚Äî –∏—Å–ø–æ–ª—å–∑—É–π for –∏–ª–∏ for...of.