–û–ø–µ—Ä–∞—Ç–æ—Ä spread (...) –≤ JavaScript –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —Ä–∞—Å–ø–∞–∫–æ–≤–∫–∏ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –º–∞—Å—Å–∏–≤–∞, –æ–±—ä–µ–∫—Ç–∞ –∏–ª–∏ –∏—Ç–µ—Ä–∞—Ç–æ—Ä–∞ –≤ –¥—Ä—É–≥–æ–º –º–µ—Å—Ç–µ, –≥–¥–µ –æ–∂–∏–¥–∞–µ—Ç—Å—è —Å–ø–∏—Å–æ–∫ –∑–Ω–∞—á–µ–Ω–∏–π.

1. –†–∞—Å–ø–∞–∫–æ–≤–∫–∞ –º–∞—Å—Å–∏–≤–æ–≤
const arr1 = [1, 2, 3];
const arr2 = [4, 5, 6];

const combined = [...arr1, ...arr2]; 
console.log(combined); // [1, 2, 3, 4, 5, 6]
üìå –ó–∞—á–µ–º?

–õ–µ–≥–∫–æ –æ–±—ä–µ–¥–∏–Ω—è—Ç—å –º–∞—Å—Å–∏–≤—ã –±–µ–∑ .concat()

–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å –º–∞—Å—Å–∏–≤—ã –±–µ–∑ –º—É—Ç–∞—Ü–∏–∏ –æ—Ä–∏–≥–∏–Ω–∞–ª–∞ (const copy = [...arr])

2. –†–∞—Å–ø–∞–∫–æ–≤–∫–∞ –æ–±—ä–µ–∫—Ç–æ–≤
const obj1 = { a: 1, b: 2 };
const obj2 = { c: 3, d: 4 };

const merged = { ...obj1, ...obj2 };
console.log(merged); // { a: 1, b: 2, c: 3, d: 4 }
üìå –ó–∞—á–µ–º?

–ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–æ–≤ –±–µ–∑ –º—É—Ç–∞—Ü–∏–∏ –æ—Ä–∏–≥–∏–Ω–∞–ª–∞ (const copy = { ...obj })

–û–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ –æ–±—ä–µ–∫—Ç–æ–≤

‚ö†Ô∏è –ï—Å–ª–∏ –∫–ª—é—á–∏ —Å–æ–≤–ø–∞–¥–∞—é—Ç, –æ—Å—Ç–∞–Ω–µ—Ç—Å—è –ø–æ—Å–ª–µ–¥–Ω–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ:

const objA = { a: 1, b: 2 };
const objB = { b: 99, c: 3 };

const result = { ...objA, ...objB };
console.log(result); // { a: 1, b: 99, c: 3 } (b –ø–µ—Ä–µ–∑–∞–ø–∏—Å–∞–Ω–æ)
3. Spread –≤ –∞—Ä–≥—É–º–µ–Ω—Ç–∞—Ö —Ñ—É–Ω–∫—Ü–∏–∏

const numbers = [10, 20, 30];

console.log(Math.max(...numbers)); // 30
üìå –ó–∞—á–µ–º?

–ü–æ–∑–≤–æ–ª—è–µ—Ç –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –º–∞—Å—Å–∏–≤ –∫–∞–∫ –æ—Ç–¥–µ–ª—å–Ω—ã–µ –∞—Ä–≥—É–º–µ–Ω—Ç—ã —Ñ—É–Ω–∫—Ü–∏–∏ (apply() –Ω–µ –Ω—É–∂–µ–Ω)

4. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –≤ –¥–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü–∏–∏

const [first, ...rest] = [1, 2, 3, 4];
console.log(first); // 1
console.log(rest);  // [2, 3, 4]
üìå –ó–∞—á–µ–º?

–£–¥–æ–±–Ω–æ –∏–∑–≤–ª–µ–∫–∞—Ç—å –ø–µ—Ä–≤—É—é —á–∞—Å—Ç—å –º–∞—Å—Å–∏–≤–∞ –∏ "–æ—Å—Ç–∞–ª—å–Ω—ã–µ" —ç–ª–µ–º–µ–Ω—Ç—ã